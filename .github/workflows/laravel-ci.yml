# .github/workflows/laravel-ci.yml
name: Laravel CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  laravel-tests:
    runs-on: ubuntu-latest

    services:
      # ServiÃ§o MySQL para testes
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: " "
          MYSQL_DATABASE: ecommerce
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

      # ServiÃ§o Redis (opcional)
      redis:
        image: redis:alpine
        ports:
          - 6379:6379
        options: --health-cmd="redis-cli ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: mbstring, xml, ctype, iconv, intl, pdo_mysql, bcmath, redis
        coverage: xdebug

    - name: Copy .env
      run: |
        cp .env.example .env
        echo "APP_ENV=testing" >> .env
        echo "DB_CONNECTION=mysql" >> .env
        echo "DB_HOST=127.0.0.1" >> .env
        echo "DB_PORT=3306" >> .env
        echo "DB_DATABASE=ecommerce" >> .env
        echo "DB_USERNAME=root" >> .env
        echo "DB_PASSWORD=" " >> .env
        echo "CACHE_DRIVER=redis" >> .env
        echo "REDIS_HOST=127.0.0.1" >> .env
        echo "REDIS_PORT=6379" >> .env

    - name: Install Composer dependencies
      run: |
        composer install --no-progress --prefer-dist --optimize-autoloader

    - name: Generate application key
      run: php artisan key:generate

    - name: Create database
      run: |
        mysql -h 127.0.0.1 -u root -ppassword -e "CREATE DATABASE IF NOT EXISTS ecommerce_test;"

    - name: Run migrations
      run: php artisan migrate --force

    - name: Run seeders
      run: php artisan db:seed --force

    - name: Execute PHPUnit tests
      run: ./vendor/bin/phpunit --coverage-text

    - name: Run Laravel Pint (formataÃ§Ã£o)
      run: ./vendor/bin/pint --test

  code-quality:
    runs-on: ubuntu-latest
    needs: laravel-tests
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'

    - name: Install dependencies
      run: composer install --no-progress --prefer-dist

    - name: Run PHPStan
      run: ./vendor/bin/phpstan analyse --memory-limit=2G

    - name: Run Security Check
      run: ./vendor/bin/security-checker security:check

  build-success:
    runs-on: ubuntu-latest
    needs: [laravel-tests, code-quality]
    if: success()
    
    steps:
    - name: Build Success
      run: |
        echo "âœ… Todos os testes passaram!"
        echo "ðŸ“¦ Build estÃ¡vel e pronta para deploy"
